
[{"content":" github.com/c-ola/cassowary-gb\nI started this project in the summer after having completed a computer architecture course at school. That course was my favorite course of that semester and I wanted to further develop my understanding a similar topic.\nTo do that I decided to start working on an emulator.\nI wanted to try something a little complex but hopefully not too difficult to write so I chose to emulate the original GameBoy. I wanted to do this from scratch with only my own knowledge of how a cpu works so I started to do some research on the console.\nThe GameBoy uses a Sharp SM83, which is a slightly modified Z80 (two sets of prefix instructions are missing, and a couple others were replaced). It is also a CISC instruction set so I had to figure out how that worked on my own because I had learnt RISC in my course.\nMy language of choice to code the project was Rust. I already had a strong understanding of C so I wanted to learn another fast low-level language.\nNot completed\u0026hellip;\n","date":"8 April 2024","externalUrl":null,"permalink":"/projects/cassowarygb/","section":"Projects","summary":"github.","title":"Cassowary GB","type":"projects"},{"content":"","date":"8 April 2024","externalUrl":null,"permalink":"/tags/emulator/","section":"Tags","summary":"","title":"Emulator","type":"tags"},{"content":"","date":"8 April 2024","externalUrl":null,"permalink":"/tags/example/","section":"Tags","summary":"","title":"Example","type":"tags"},{"content":"","date":"8 April 2024","externalUrl":null,"permalink":"/tags/gameboy/","section":"Tags","summary":"","title":"Gameboy","type":"tags"},{"content":"","date":"8 April 2024","externalUrl":null,"permalink":"/projects/","section":"Projects","summary":"","title":"Projects","type":"projects"},{"content":" Echo Me # After connecting to the given server with ssh, we are met with a program that prints back anything that you send. Since all the program does is read lines, and print them back out, all you can really do is use format specifiers to find an exploit. To start, I just sent a bunch of %xs. We can see that there is a repeating 8 %x long pattern. Converting this to hex results in some recognizeable text, but half of it is garbage. This means we are likely missing some info, so we can use %lx to print out long ints. We then get: Copying the numbers fbad2288.7ffd71a15c60.0.0.74737b2d46544351.733068742d6b6334.66746e3172702d33.7d73 into cyberchef, we get alot more readable characters, but there is still some garbage, so we start removing from the front (this is because the endianess is swapped). We can then get our flag. This gives us the flag QCTF-{st4ck-th0s3-pr1ntfs} which is correct!\n","date":"8 April 2024","externalUrl":null,"permalink":"/writeups/qctf2024/","section":"Writeups","summary":"Echo Me # After connecting to the given server with ssh, we are met with a program that prints back anything that you send.","title":"QCTF 2024","type":"writeups"},{"content":"","date":"8 April 2024","externalUrl":null,"permalink":"/tags/tag/","section":"Tags","summary":"","title":"Tag","type":"tags"},{"content":"","date":"8 April 2024","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"8 April 2024","externalUrl":null,"permalink":"/writeups/","section":"Writeups","summary":"","title":"Writeups","type":"writeups"},{"content":"","date":"13 March 2024","externalUrl":null,"permalink":"/tags/assembler/","section":"Tags","summary":"","title":"Assembler","type":"tags"},{"content":"","date":"13 March 2024","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":" Repo\nI first started this project because of an academic project where we were tasked with making a CPU in verilog. We got to a point where we had to start decoding instructions which meant we\u0026rsquo;d have to convert assembly instructions to their respective machine code.\nThis was a fairly cumbersome process (mapping everything by hand) so I decided to write a python script to automate this process. Using my understanding of assembly that I learnt through my emulator as well as school, I was able to quickly write a script that could convert all the instructions that we were told to use in class, to machine code.\nAt the moment, it can hardly be called an assembler due to it\u0026rsquo;s lack of features, however I do plan on adding a couple of things to it, and I might even go outside the scope of my school project for some things (interpreter??).\nFeatures that are currently supported are:\nconverting files to hex converting single instructions to hex binary, signed/unsigned decimal, hex immediate value representations location tags (for branches, etc) directives (ORG) Planned to support:\nexponential immediate values (e.g. 10e3) signed binary and hex macro immediate values initializing locations in memory to data (strings, integers, etc) (other directives) maybe maybe interpreter ","date":"13 March 2024","externalUrl":null,"permalink":"/projects/minisrc/","section":"Projects","summary":"Repo","title":"Mini SRC Assembler","type":"projects"},{"content":"","date":"13 March 2024","externalUrl":null,"permalink":"/categories/projects/","section":"Categories","summary":"","title":"Projects","type":"categories"},{"content":"I am a student in my 3rd year at Queen\u0026rsquo;s University, currently studying Computer Engineering.\nMy primary interests lie in low level programming, and understanding how computers work. I have also started to do some CTFs.\nHere you can find my projects, write ups, and links to contact me.\n","date":"14 September 2023","externalUrl":null,"permalink":"/","section":"","summary":"I am a student in my 3rd year at Queen\u0026rsquo;s University, currently studying Computer Engineering.","title":"","type":"page"},{"content":"","date":"1 January 0001","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","date":"1 January 0001","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"}]